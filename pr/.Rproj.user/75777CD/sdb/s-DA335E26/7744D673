{
    "collab_server" : "",
    "contents" : "library(pr)\nlibrary(xtable)\nlibrary(latex2exp)\nlibrary(grDevices)\n\nCs <- NULL\nrhos <- NULL\ndeltas <- NULL\nobs <- NULL\nt_rejection_rates <- NULL\nq_rejection_rates <- NULL\nbq_rejection_rates <- NULL\npretest_rejection_rates <- NULL\n\n\n\nsigma_u_sq <- 1\nsigma_e_sq <- 1\ngamma <- 0.0\nalpha <- 0.0\nbeta <- 0.0\nbeta_0 <- 0\nMC <- 10000\n\nfor (N in c(50, 10000)){\n  N <- N+1 # correct for the loss of 1 observation due to lagging\n  for (C in c(0, -2)){\n    for (delta in c(-0.95)){\n\n        sigma_ue <- delta\n        Sigma <- matrix(c(sigma_u_sq, sigma_ue, sigma_ue, sigma_e_sq), 2, 2)\n        rho <- 1 +C/N\n\n\n\n        t_stats <- NULL\n        q_stats <- NULL\n        q_bonferroni_two_sided <- NULL\n        q_bonferroni_right <- NULL\n        infeasible_q <- NULL\n        t_right <- NULL\n        pretest_rejection <- NULL\n\n        DEBUG=FALSE\n\n        q_test <- function() {\n          beta_ue <- sigma_ue/sigma_e_sq\n          x_lagged_demeaned <- x[1:length(x)-1] - mean(x[1:length(x)-1])\n\n          return((sum(x_lagged_demeaned*(r[2:length(r)]-beta_0*x[1:length(x)-1]\n                                         - beta_ue*(x[2:length(x)]-rho*x[1:length(x)-1])))\n                  /((sigma_u_sq*(1-delta^2))^0.5*((sum(x_lagged_demeaned^2))^0.5))\n          ))\n        }\n\n\n\n        for (j in 1:MC){\n          w <- mvrnorm(n=N, rep(0, 2), Sigma)\n\n\n          x <- NULL\n          x[1] = w[1,1]\n          for(t in 2:N){\n            x[t] <- gamma + rho*x[t-1] + w[t,1]\n          }\n\n          #AR(2)\n          # x <- NULL\n          # x[1] = w[1,1]\n          # x[2] = w[2,1]\n          # for(t in 3:N){\n          #   x[t] = gamma + rho*x[t-1] + 0.3*x[t-2] + w[t,1]\n          # }\n\n          r <- NULL\n\n          for(t in 2:N){\n            r[t] = alpha + beta*x[t-1] + w[t,2]\n          }\n\n\n          linmod <- lm(r[2:N] ~ x[1:N-1])\n          s <- summary(linmod)\n\n          linmod2 <- lm(x[2:N] ~ x[1:N-1])\n          s2 <- summary(linmod2)\n\n          beta_hat <- s$coefficients[2,1]\n          SE_beta <- s$coefficients[2,2]\n\n          rho_hat <- s2$coefficients[2,1]\n          SE_rho <- s2$coefficients[2,2]\n\n\n          std_error_theoretical <- sigma_u_sq^0.5*sum((x[1:N-1]-mean(x[1:N-1]))^2)^-0.5\n\n          t <- s$coefficients[2,3]\n          q <- q_test()\n\n          rho_confidence_interval <- rho_ci2(x, lags=1, level=\"0.95\")\n          t_test_reliable <- as.numeric(sizeDistortionTest2(r, x, lags=1))\n          ci_beta <- bonferroniQci(r,x, lags=1)\n\n\n          q_test_outcome_right_sided <- as.numeric(0<ci_beta[1])\n          q_test_outcome_two_sided <- as.numeric((0<ci_beta[1]) | (0>ci_beta[2]))\n          infeasible_q_outcome <- as.numeric(q > 1.645)\n\n          if (DEBUG==TRUE){\n            print(var(w))\n            plot.ts(x)\n            plot.ts(r)\n            print(s)\n            print(t)\n\n          }\n\n\n          t_stats[j] = t\n          q_stats[j] = q\n          q_bonferroni_right[j] = q_test_outcome_right_sided\n          t_right[j] <- as.numeric(t > 1.645)\n          q_bonferroni_two_sided[j] = q_test_outcome_two_sided\n          infeasible_q[j] = infeasible_q_outcome\n          pretest_rejection[j] <- t_test_reliable\n\n        }\n\n\n\n        png(paste(\"mc_output/hist_t_test_\", rho,'_' ,delta,'_', N-1, 'Obs','.png', sep=''), width=600, height=600)\n        hist(t_stats, density=20, breaks=20, prob=TRUE,\n             xlab=\"t-statistic\",\n             main=TeX(sprintf(\"standard normal curve over histogram, $c = %g$, $\\\\rho = %g$, $\\\\delta = %g$, $Obs = %g$\",\n                              C, rho, delta, N-1)))\n        curve(dnorm(x, mean=0, sd=1),\n              col=\"darkblue\", lwd=2, add=TRUE, yaxt=\"n\")\n        dev.off()\n\n\n        png(paste(\"mc_output/hist_q_test_\", rho,'_', delta, '_', N-1, 'Obs', '.png', sep=''), width=600, height=600)\n        hist(q_stats, density=20, breaks=20, prob=TRUE,\n             xlab=\"q-statistic\",\n             main=TeX(sprintf(\"standard normal curve over histogram, $c = %g$, $\\\\rho = %g$, $\\\\delta = %g$, $Obs = %g$\",\n                              C, rho, delta, N-1)))\n        curve(dnorm(x, mean=0, sd=1),\n              col=\"darkblue\", lwd=2, add=TRUE, yaxt=\"n\")\n        dev.off()\n\n\n        Cs <- c(Cs,C)\n        rhos <- c(rhos,rho)\n        deltas <- c(deltas,delta)\n        obs <- c(obs,N-1)\n\n        bq_rejection_rates <- c(bq_rejection_rates,(mean(q_bonferroni_right)))\n        # bq_both_rr <- (mean(q_bonferroni_two_sided))\n        q_rejection_rates <- c(q_rejection_rates,(mean(infeasible_q)))\n        t_rejection_rates <- c(t_rejection_rates,(mean(t_right)))\n        pretest_rejection_rates <- c(pretest_rejection_rates, (mean(pretest_rejection)))\n\n    }\n  }\n}\n\n\nmaster_df <- data.frame(\"Obs\" = obs,\n                        \"c\" = Cs,\n                        \"rho\" = rhos,\n                        \"delta\" = deltas,\n                        \"T.test\" = t_rejection_rates,\n                        \"Pretest\" = pretest_rejection_rates,\n                        \"Bonf.Q.test\" = bq_rejection_rates,\n                        \"Q.test\" = q_rejection_rates )\n\nprint(xtable(master_df[ , c(\"Obs\",\"c\",\"rho\",\"delta\",\"T.test\",\"Bonf.Q.test\",\"Q.test\")],\n             digits=c(0,0,0,3,2,4,4,4), type = \"latex\"), file = \"mc_output/table.tex\")\n",
    "created" : 1561216606338.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2439570892",
    "id" : "7744D673",
    "lastKnownWriteTime" : 1561217619,
    "last_content_update" : 1561217619842,
    "path" : "~/Desktop/PersistentRegressors/mc.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 20,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}