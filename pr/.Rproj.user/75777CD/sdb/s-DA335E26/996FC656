{
    "collab_server" : "",
    "contents" : "success <- require(urca)\n\nbonferroniQci_ar1 <- function(r,x) {\n  print(\"bonferroniQci_ar1 is deprecated, use bonferroniQci instead!\")\n  df <- pr::bonferroniQ\n\n  N <- length(x)\n  linmod <- lm(r[2:N] ~ x[1:N-1])\n  s <- summary(linmod)\n\n  linmod2 <- lm(x[2:N] ~ x[1:N-1])\n  s2 <- summary(linmod2)\n\n  beta_hat <- s$coefficients[2,1]\n  SE_beta <- s$coefficients[2,2]\n\n  rho_hat <- s2$coefficients[2,1]\n  SE_rho <- s2$coefficients[2,2]\n\n  T <- length(x)-1\n  u <- s$residuals\n  e <- s2$residuals\n\n  sigma_u_hat_sq <- 1/(length(u)-2)*u%*%u\n  sigma_e_hat_sq <- 1/(length(e)-2)*e%*%e\n  sigma_ue_hat <- 1/(length(e)-2)*u%*%e\n  delta_hat <- sigma_ue_hat/(sigma_u_hat_sq*sigma_e_hat_sq)^0.5\n\n\n\n  if (success==TRUE){\n    ers.x <- ur.ers(x, type=\"DF-GLS\", model=\"constant\", lag.max=0)\n    ers.s <- summary(ers.x)\n    ers.test_stat <- ers.x@teststat\n    df_gls <- ers.test_stat\n  }\n  else{\n\n    ####DF GLS\n    rho_gls <- 1-7/(length(e))\n    y <- x -c(0,rho_gls*x[1:length(x)-1])\n    x_prime <- c(1,rep(1-rho_gls, length(x)-1))\n\n    # estimate linear model without intercept\n    linmod3 <- lm(y~x_prime -1)\n    s3 <- summary(linmod3)\n\n    mu_gls <- s3$coefficients[1,1]\n    x_bar <-  x - mu_gls\n    x_bar_diff <- diff(x_bar)\n    x_bar_lag <-  x_bar[1:length(x_bar)-1]\n\n    # estimate linear model without intercept\n    linmod4 <- lm( x_bar_diff ~ x_bar_lag -1)\n    s4 <- summary(linmod4)\n    df_gls <- s4$coefficients[\"x_bar_lag\",\"t value\"]\n\n  }\n\n\n\n  table_deltas <- c(-0.999, -0.975, -0.95, -0.925,\n                   -0.9, -0.875, -0.85, -0.825,\n                   -0.8, -0.775, -0.75, -0.725,\n                   0.7, -0.675, -0.65, -0.625,\n                   -0.6, -0.575, -0.55, -0.525,\n                   -0.5, -0.475, -0.45, -0.425,\n                   -0.4, -0.375, -0.35, -0.325,\n                   -0.3, -0.275, -0.25, -0.225,\n                   -0.2, -0.175, -0.15, -0.125,\n                   -0.1, -0.075, -0.05, -0.025)\n\n\n\n\n\n  delta_lookup <- table_deltas[which.min(abs(table_deltas - c(delta_hat)) )]\n\n\n\n\n  #get closest tabulated df_gls value\n  table_df_gls <- as.numeric(row.names(df))\n  df_gls_lookup <- table_df_gls[which.min(abs(table_df_gls - c(df_gls)) )]\n\n\n  ci <- df[as.character(df_gls_lookup),as.character(delta_lookup)][[1]]\n\n  ci_rho <- c(1+ci[[1]]/T, 1+ci[[2]]/T)\n\n  r_star_rho_l <- r[2:length(r)] - c(sigma_ue_hat/sigma_e_hat_sq)*(x[2:length(x)]-ci_rho[[1]]*x[1:(length(x)-1)])\n  r_star_rho_u <- r[2:length(r)] - c(sigma_ue_hat/sigma_e_hat_sq)*(x[2:length(x)]-ci_rho[[2]]*x[1:(length(x)-1)])\n\n  linmod5 <- lm(r_star_rho_l ~ x[1:length(x)-1])\n  s5 <- summary(linmod5)\n  beta_rho_l <- s5$coefficients[2,1]\n  se_beta_rho_l <- s5$coefficients[2,2]\n\n  linmod6 <- lm(r_star_rho_u ~ x[1:length(x)-1])\n  s6 <- summary(linmod6)\n  beta_rho_u <- s6$coefficients[2,1]\n  se_beta_rho_u <- s6$coefficients[2,2]\n\n  ci_beta <- c(beta_rho_u-1.645*sqrt(1-delta_hat^2)*SE_beta, beta_rho_l+1.645*sqrt(1-delta_hat^2)*SE_beta)\n  return(ci_beta)\n\n}\n\n\n",
    "created" : 1561128001751.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3503135301",
    "id" : "996FC656",
    "lastKnownWriteTime" : 1561134567,
    "last_content_update" : 1561134567296,
    "path" : "~/Desktop/PersistentRegressors/pr/R/bonferroniQtest.R",
    "project_path" : "R/bonferroniQtest.R",
    "properties" : {
    },
    "relative_order" : 24,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}