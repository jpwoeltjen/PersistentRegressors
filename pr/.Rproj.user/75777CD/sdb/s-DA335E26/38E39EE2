{
    "collab_server" : "",
    "contents" : "library(pr)\nlibrary(zoo)\nlibrary(data.table)\nlibrary(ggplot2)\n\n\nsetwd(\"~/Desktop/PersistentRegressors\")\n\nname <- 'Annual'\ndir_name <- paste('data/',name, '.csv', sep='')\ndf <- read.csv(dir_name, header =TRUE, sep=\",\", dec=\".\" , check.names=TRUE)\ncolnames(df)[1] <- 'yyyy'\nname <- substr(name, 1, 3)\n# df <- df[as.character(1952:2003),]\ndf$Index <- as.numeric(gsub(\",\",\"\",df$Index))\nmax_year <- 2017\nmin_year <- 2003\n\nname_list <- NULL\nvar_list <- NULL\ndelta_list <- NULL\ndf_gls_list <- NULL\nlags_list <- NULL\nt_stat_list <- NULL\npretest_list <- NULL\nbeta_list <- NULL\nrho_ci_list <- NULL\nbeta_ci_scaled_list <- NULL\nobs_list <- NULL\n\n\n\n\n############## MA(10) of earnings / Index price ###############################\n\ndf$earnings_ma <- rollmean(df$E12,10, fill = NA, align = \"right\")\ndf$ep <- df$earnings_ma/df$Index\ndf$earnings_yield <- df$E12/df$Index\n\ndf$log_return <- c( NA, diff(log(df$Index)) )\ndf$return <-  df$Index/shift(df$Index, n=1, fill=NA, type=\"lag\") -1\n# df$excess_log_return <- df$log_return - df$Rfree\ndf$excess_log_return <- df$CRSP_SPvwx\n\n\ndf2<- na.omit(df[,c('yyyy','excess_log_return', 'ep')])\ndf2 <- df2[df2$yyyy<=max_year,]\ndf2 <- df2[df2$yyyy>=min_year,]\n\nx <- log(df2$ep)\nr <- df2$excess_log_return\n\n\nggplot(df2[,c('yyyy','excess_log_return', 'ep')], aes(yyyy)) +\n  geom_line(aes(y = excess_log_return, colour = \"excess_log_return\")) +\n  geom_line(aes(y = ep, colour = \"ep\"))\n\nlm1 <- lm(r[-1] ~ x[-length(x)])\nsmry1 <- summary(lm1)\nbeta = smry1$coefficients[2,1]\nt_stat = smry1$coefficients[2,3]\n\nrho_ci_outcome <- rho_ci2(x, lags=1, level=\"0.95\", max_lags=6)\nopt_lags <- rho_ci_outcome[6]\nrho_ci_bonferroni <- rho_ci_outcome[1:2]\nc_ci_bonferroni <- rho_ci_outcome[3:4]\n\nt_test_reliable <- sizeDistortionTest2(r, x, lags=opt_lags)\n\nbonferroniQ_outcome <- bonferroniQci(r, x, lags=opt_lags)\n\nbeta_ci <- bonferroniQ_outcome[1:2]\nbeta_ci_scaled <- round(beta_ci*bonferroniQ_outcome[8],3)\nrho_ci_ref_bonferroni <- round(bonferroniQ_outcome[3:4],3)\ndelta_hat <- round(bonferroniQ_outcome[5],3)\ndf_gls <- round(bonferroniQ_outcome[7],3)\n\nname_list <- c(name_list, name)\nvar_list <- c(var_list, colnames(df2)[3])\ndelta_list <- c(delta_list, delta_hat)\ndf_gls_list <- c(df_gls_list, df_gls)\nlags_list <- c(lags_list, opt_lags)\nt_stat_list <- c(t_stat_list, t_stat)\npretest_list <- c(pretest_list, t_test_reliable)\nbeta_list <- c(beta_list, beta)\nrho_ci_list <-c(rho_ci_list, paste('[',rho_ci_ref_bonferroni[1],',',rho_ci_ref_bonferroni[2],']', sep=''))\nbeta_ci_scaled_list <-c(beta_ci_scaled_list, paste('[',beta_ci_scaled[1],',',beta_ci_scaled[2],']', sep=''))\nobs_list <- c(obs_list, length(x))\n\n\n\n\n############## 1 yyyy dividends / Index price ###############################\n\ndf$dp <- df$D12/df$Index\ndf2<- na.omit(df[,c('yyyy','excess_log_return', 'dp')])\ndf2 <- df2[df2$yyyy<=max_year,]\ndf2 <- df2[df2$yyyy>=min_year,]\n\n\nggplot(df2[,c('yyyy','excess_log_return', 'dp')], aes(yyyy)) +\n  geom_line(aes(y = excess_log_return, colour = \"excess_log_return\")) +\n  geom_line(aes(y = dp, colour = \"dp\"))\n\nx <- log(df2$dp)\nr <- df2$excess_log_return\n\nlm1 <- lm(r[-1] ~ x[-length(x)])\nsmry1 <- summary(lm1)\nbeta = smry1$coefficients[2,1]\nt_stat = smry1$coefficients[2,3]\n\nrho_ci_outcome <- rho_ci2(x, lags=1, level=\"0.95\", max_lags=6)\nopt_lags <- rho_ci_outcome[6]\nrho_ci_bonferroni <- rho_ci_outcome[1:2]\nc_ci_bonferroni <- rho_ci_outcome[3:4]\n\nt_test_reliable <- sizeDistortionTest2(r, x, lags=opt_lags)\n\nbonferroniQ_outcome <- bonferroniQci(r, x, lags=opt_lags)\n\nbeta_ci <- bonferroniQ_outcome[1:2]\nbeta_ci_scaled <- round(beta_ci*bonferroniQ_outcome[8],3)\nrho_ci_ref_bonferroni <- round(bonferroniQ_outcome[3:4],3)\ndelta_hat <- round(bonferroniQ_outcome[5],3)\ndf_gls <- round(bonferroniQ_outcome[7],3)\n\nname_list <- c(name_list, name)\nvar_list <- c(var_list, colnames(df2)[3])\ndelta_list <- c(delta_list, delta_hat)\ndf_gls_list <- c(df_gls_list, df_gls)\nlags_list <- c(lags_list, opt_lags)\nt_stat_list <- c(t_stat_list, t_stat)\npretest_list <- c(pretest_list, t_test_reliable)\nbeta_list <- c(beta_list, beta)\nrho_ci_list <-c(rho_ci_list, paste('[',rho_ci_ref_bonferroni[1],',',rho_ci_ref_bonferroni[2],']', sep=''))\nbeta_ci_scaled_list <-c(beta_ci_scaled_list, paste('[',beta_ci_scaled[1],',',beta_ci_scaled[2],']', sep=''))\nobs_list <- c(obs_list, length(x))\n\n\n############## T-bill #################################################\ndf2<- na.omit(df[,c('yyyy','excess_log_return', 'tbl')])\ndf2 <- df2[df2$yyyy>1951,]\ndf2 <- df2[df2$yyyy<=max_year,]\ndf2 <- df2[df2$yyyy>=min_year,]\n\n\n\nggplot(df2[,c('yyyy','excess_log_return', 'tbl')], aes(yyyy)) +\n  geom_line(aes(y = excess_log_return, colour = \"excess_log_return\")) +\n  geom_line(aes(y = tbl, colour = \"tbl\"))\n\nx <- df2$tbl\nr <- df2$excess_log_return\n\nlm1 <- lm(r[-1] ~ x[-length(x)])\nsmry1 <- summary(lm1)\nbeta = smry1$coefficients[2,1]\nt_stat = smry1$coefficients[2,3]\n\nrho_ci_outcome <- rho_ci2(x, lags=1, level=\"0.95\", max_lags=6)\nopt_lags <- rho_ci_outcome[6]\nrho_ci_bonferroni <- rho_ci_outcome[1:2]\nc_ci_bonferroni <- rho_ci_outcome[3:4]\n\nt_test_reliable <- sizeDistortionTest2(r, x, lags=opt_lags)\n\nbonferroniQ_outcome <- bonferroniQci(r, x, lags=opt_lags)\n\nbeta_ci <- bonferroniQ_outcome[1:2]\nbeta_ci_scaled <- round(beta_ci*bonferroniQ_outcome[8],3)\nrho_ci_ref_bonferroni <- round(bonferroniQ_outcome[3:4],3)\ndelta_hat <- round(bonferroniQ_outcome[5],3)\ndf_gls <- round(bonferroniQ_outcome[7],3)\n\nname_list <- c(name_list, name)\nvar_list <- c(var_list, colnames(df2)[3])\ndelta_list <- c(delta_list, delta_hat)\ndf_gls_list <- c(df_gls_list, df_gls)\nlags_list <- c(lags_list, opt_lags)\nt_stat_list <- c(t_stat_list, t_stat)\npretest_list <- c(pretest_list, t_test_reliable)\nbeta_list <- c(beta_list, beta)\nrho_ci_list <-c(rho_ci_list, paste('[',rho_ci_ref_bonferroni[1],',',rho_ci_ref_bonferroni[2],']', sep=''))\nbeta_ci_scaled_list <-c(beta_ci_scaled_list, paste('[',beta_ci_scaled[1],',',beta_ci_scaled[2],']', sep=''))\nobs_list <- c(obs_list, length(x))\n\n\n############## long-term short-term yield spread #####################\ndf$tms <- df$lty - df$tbl\ndf2<- na.omit(df[,c('yyyy','excess_log_return', 'tms')])\ndf2 <- df2[df2$yyyy>1951,]\ndf2 <- df2[df2$yyyy<=max_year,]\ndf2 <- df2[df2$yyyy>=min_year,]\n\n\nggplot(df2[,c('yyyy','excess_log_return', 'tms')], aes(yyyy)) +\n  geom_line(aes(y = excess_log_return, colour = \"excess_log_return\")) +\n  geom_line(aes(y = tms, colour = \"term spread\"))\n\nx <- df2$tms\nr <- df2$excess_log_return\n\nlm1 <- lm(r[-1] ~ x[-length(x)])\nsmry1 <- summary(lm1)\nbeta = smry1$coefficients[2,1]\nt_stat = smry1$coefficients[2,3]\n\nrho_ci_outcome <- rho_ci2(x, lags=1, level=\"0.95\", max_lags=6)\nopt_lags <- rho_ci_outcome[6]\nrho_ci_bonferroni <- rho_ci_outcome[1:2]\nc_ci_bonferroni <- rho_ci_outcome[3:4]\n\nt_test_reliable <- sizeDistortionTest2(r, x, lags=opt_lags)\n\nbonferroniQ_outcome <- bonferroniQci(r, x, lags=opt_lags)\n\nbeta_ci <- bonferroniQ_outcome[1:2]\nbeta_ci_scaled <- round(beta_ci*bonferroniQ_outcome[8],3)\nrho_ci_ref_bonferroni <- round(bonferroniQ_outcome[3:4],3)\ndelta_hat <- round(bonferroniQ_outcome[5],3)\ndf_gls <- round(bonferroniQ_outcome[7],3)\n\nname_list <- c(name_list, name)\nvar_list <- c(var_list, colnames(df2)[3])\ndelta_list <- c(delta_list, delta_hat)\ndf_gls_list <- c(df_gls_list, df_gls)\nlags_list <- c(lags_list, opt_lags)\nt_stat_list <- c(t_stat_list, t_stat)\npretest_list <- c(pretest_list, t_test_reliable)\nbeta_list <- c(beta_list, beta)\nrho_ci_list <-c(rho_ci_list, paste('[',rho_ci_ref_bonferroni[1],',',rho_ci_ref_bonferroni[2],']', sep=''))\nbeta_ci_scaled_list <-c(beta_ci_scaled_list, paste('[',beta_ci_scaled[1],',',beta_ci_scaled[2],']', sep=''))\nobs_list <- c(obs_list, length(x))\n\n\nmaster_df <- data.frame(  name_list,\n                          var_list,\n                          # obs_list,\n                          delta_list,\n                          rho_ci_list,\n                          # df_gls_list,\n                          # lags_list,\n                          t_stat_list,\n                          as.numeric(pretest_list),\n                          beta_list,\n                          beta_ci_scaled_list)\n\nfile_name <- paste('results/empirical_results_', Sys.time(), '.tex', sep='')\nprint(xtable(master_df, digits=c(0, 0,0,2,0,2,0,3,0), type = \"latex\"), file = file_name, include.rownames=FALSE)\n\n",
    "created" : 1560957554386.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1071734340",
    "id" : "38E39EE2",
    "lastKnownWriteTime" : 1561201065,
    "last_content_update" : 1561201065390,
    "path" : "~/Desktop/PersistentRegressors/empiricalTest.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 18,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}